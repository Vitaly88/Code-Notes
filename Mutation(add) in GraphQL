const { GraphQLServer } = require('graphql-yoga');
const mongoose = require('mongoose');
const uuid = require('uuid');
mongoose.connect('mongodb://localhost/graphqlTutorial',  { useNewUrlParser: true });

const authorSchema = new mongoose.Schema ({
  id: {type: String, default: uuid.v1},
  name: String,
  age: Number,
  books: [String]
});

const Author = mongoose.model('Author', authorSchema);

// 1 Graphql SchemaauthorSchema

const resolvers = {

  Query: {
      author: (root, {id}) => {}
  },
  
  Mutation: {
    addAuthor: (root, {age, name, books}) => {
      const author = new Author({age: age, name: name, books: books});
      return author.save();
    }
  }
};

// runs a server and bundles the schema and the resolvers
const server = new GraphQLServer({
  typeDefs: `./src/schema.graphql`,
  resolvers,
});

const connection = mongoose.connection;

connection.once('open', () => {
  console.log('connection to database was successful');
})
server.start(() => console.log(`Server is running on http://localhost:4000`))
